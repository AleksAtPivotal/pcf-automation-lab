groups:
- name: full-pcf
  jobs:
  - deploy-opsman

resource_types:
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

resources:
- name: platform-automation-tasks
  type: azure-blobstore
  source:
    storage_account_name: ((storage.accountname))
    storage_account_key: ((storage.accountkey)) 
    container: "platform-automation"
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: azure-blobstore
  source:
    storage_account_name: ((storage.accountname))
    storage_account_key: ((storage.accountkey)) 
    container: "platform-automation"
    regexp: platform-automation-image-(.*).tgz
    
- name: opsman-image
  type: azure-blobstore
  source:
    storage_account_name: ((storage.accountname))
    storage_account_key: ((storage.accountkey)) 
    container: "opsmgr"
    regexp: ops-manager-azure-(.*).yml
      
# configurations
- name: configuration
  type: git
  source:
    uri: ((git_uri))
    branch: ((git_branch))
    git_crypt_key: ((git.git_crypt_key))
    private_key: ((git.private_key))

# triggers used to have jobs do something in a timely manner
- name: one-time-trigger
  type: time
  source:
    interval: 999999h

# - name: daily-trigger
#   type: time
#   source:
#     interval: 24h

jobs:      
- name: deploy-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
      - get: one-time-trigger
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: configuration
      - get: opsman-image
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: opsman-image
        state: configuration
        config: configuration
        vars: configuration
      params:
        VARS_FILES: vars/foundations/((foundation))/vars/ops-manager/manual.yml vars/foundations/((foundation))/vars/ops-manager/secrets.yml
        STATE_FILE: state/foundations/((foundation))/state/state.yml
        OPSMAN_CONFIG_FILE: foundations/((foundation))/config/ops-manager.yml
      on_success: &make-state-commit
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: configuration
              file-source: generated-state
            output_mapping:
              repository-commit: configuration-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: foundations/((foundation))/state/state.yml
              GIT_AUTHOR_EMAIL: ((github.user.email))
              GIT_AUTHOR_NAME: ((github.user.username))
              COMMIT_MESSAGE: "Add or update state file: state.yml"
          - put: configuration
            params:
              repository: configuration-commit
              merge: true
    - task: int-auth
      image: platform-automation-image
      config:
        platform: linux
        inputs:
          - name: configuration
        outputs:
          - name: auth-output
        run:
          path: bash
          args:
            - -c
            - |
              set -eu
              om interpolate --config configuration/foundations/((foundation))/env/env.yml -l configuration/foundations/((foundation))/vars/auth/secrets.yml > auth-output/env.yml
              om interpolate --config configuration/foundations/((foundation))/config/auth.yml -l configuration/foundations/((foundation))/vars/auth/secrets.yml > auth-output/auth.yml
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: auth-output
        config: auth-output
      params:
        ENV_FILE: env.yml
        AUTH_CONFIG_FILE: auth.yml
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: pcf-automation
        env: pcf-automation
        vars: interpolated-files
      params:
        VARS_FILES: vars/((foundation))/vars/director-vars.yml
        ENV_FILE: ((foundation))/env/env.yml
        DIRECTOR_CONFIG_FILE: ((foundation))/config/director.yml
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: pcf-automation
      params:
        ENV_FILE: ((foundation))/env/env.yml